// <auto-generated />
using System;
using Database.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PortableFitnessApp.Migrations
{
    [DbContext(typeof(Database.Contexts.AppContext))]
    partial class MealFoodContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassLibrary1.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FoodId"));

                    b.Property<double>("Calories")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Calories");

                    b.Property<double>("Carbohydrates")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Carbohydrates");

                    b.Property<double>("Fats")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Fats");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "Name");

                    b.Property<double>("Proteins")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "Proteins");

                    b.HasKey("FoodId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Meal", b =>
                {
                    b.Property<int>("MealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MealId"));

                    b.Property<DateTime>("MealDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MealId");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("Database.RepositoryObjects.MealFood", b =>
                {
                    b.Property<int>("MealId")
                        .HasColumnType("int");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("MealId", "FoodId");

                    b.HasIndex("FoodId");

                    b.ToTable("MealFoods");
                });

            modelBuilder.Entity("FitnessLogic.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "birthDate");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "gender");

                    b.Property<double>("Height")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "height");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<double>("Weight")
                        .HasColumnType("float")
                        .HasAnnotation("Relational:JsonPropertyName", "weight");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Meal", b =>
                {
                    b.HasOne("FitnessLogic.Models.User", "User")
                        .WithMany("Meals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Database.RepositoryObjects.MealFood", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Food", "Food")
                        .WithMany("MealFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary1.Models.Meal", "Meal")
                        .WithMany("MealFoods")
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Food", b =>
                {
                    b.Navigation("MealFoods");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Meal", b =>
                {
                    b.Navigation("MealFoods");
                });

            modelBuilder.Entity("FitnessLogic.Models.User", b =>
                {
                    b.Navigation("Meals");
                });
#pragma warning restore 612, 618
        }
    }
}
